{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation productVariantUpdate($input: ProductVariantInput!) {\\n    productVariantUpdate(input: $input) {\\n      product {\\n        title\\n      }\\n      productVariant {\\n        id\\n        price\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Banner, Card, DisplayText, Form, FormLayout, Frame, Layout, Page, PageActions, TextField, Toast } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\nvar EditProduct = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditProduct, _React$Component);\n\n  var _super = _createSuper(EditProduct);\n\n  function EditProduct() {\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      discount: '',\n      price: '',\n      variantId: '',\n      showToast: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.variants.edges[0].node.id;\n      var discounter = price * 0.1;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return (price - discounter).toFixed(2);\n    });\n\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        discount: this.itemToBeConsumed()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          price = _this$state.price,\n          discount = _this$state.discount,\n          variantId = _this$state.variantId;\n      return __jsx(Mutation, {\n        mutation: UPDATE_PRICE\n      }, function (handleSubmit, _ref) {\n        var error = _ref.error,\n            data = _ref.data;\n\n        var showError = error && __jsx(Banner, {\n          status: \"critical\"\n        }, error.message);\n\n        var showToast = data && data.productVariantUpdate && __jsx(Toast, {\n          content: \"Sucessfully updated\",\n          onDismiss: function onDismiss() {\n            return _this2.setState({\n              showToast: false\n            });\n          }\n        });\n\n        return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(DisplayText, {\n          size: \"large\"\n        }, name), __jsx(Form, null, __jsx(Card, {\n          sectioned: true\n        }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n          prefix: \"$\",\n          value: price,\n          disabled: true,\n          label: \"Original price\",\n          type: \"price\"\n        }), __jsx(TextField, {\n          prefix: \"$\",\n          value: discount,\n          onChange: _this2.handleChange('discount'),\n          label: \"Discounted price\",\n          type: \"discount\"\n        })), __jsx(\"p\", null, \"This sale price will expire in two weeks\"))), __jsx(PageActions, {\n          primaryAction: [{\n            content: 'Save',\n            onAction: function onAction() {\n              var productVariableInput = {\n                id: variantId,\n                price: discount\n              };\n              handleSubmit({\n                variables: {\n                  input: productVariableInput\n                }\n              });\n            }\n          }],\n          secondaryActions: [{\n            content: 'Remove discount'\n          }]\n        })))));\n      });\n    }\n  }]);\n\n  return EditProduct;\n}(React.Component);\n\nexport default EditProduct;\nvar UPDATE_PRICE = gql(_templateObject());","map":{"version":3,"sources":["/Users/richardmcsharry/code/shopify-demo/pages/edit-product.js"],"names":["Banner","Card","DisplayText","Form","FormLayout","Frame","Layout","Page","PageActions","TextField","Toast","store","gql","Mutation","EditProduct","discount","price","variantId","showToast","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","itemToBeConsumed","state","name","UPDATE_PRICE","handleSubmit","error","data","showError","message","productVariantUpdate","handleChange","content","onAction","productVariableInput","variables","input","React","Component"],"mappings":"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","sourcesContent":["import {\n  Banner,\n  Card,\n  DisplayText,\n  Form,\n  FormLayout,\n  Frame,\n  Layout,\n  Page,\n  PageActions,\n  TextField,\n  Toast\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\nclass EditProduct extends React.Component {\n  state = {\n    discount: '',\n    price: '',\n    variantId: '',\n    showToast: false\n  };\n\n  componentDidMount() {\n    this.setState({ discount: this.itemToBeConsumed() });\n  }\n\n  render() {\n    const { name, price, discount, variantId } = this.state;\n    return (\n      <Mutation mutation={UPDATE_PRICE}>\n        {(handleSubmit, { error, data }) => {\n          const showError = error && (\n            <Banner status='critical'>{error.message}</Banner>\n          );\n          const showToast = data && data.productVariantUpdate && (\n            <Toast\n              content='Sucessfully updated'\n              onDismiss={() => this.setState({ showToast: false })}\n            />\n          );\n          return (\n            <Page>\n              <Layout>\n                <Layout.Section>\n                  <DisplayText size='large'>{name}</DisplayText>\n                  <Form>\n                    <Card sectioned>\n                      <FormLayout>\n                        <FormLayout.Group>\n                          <TextField\n                            prefix='$'\n                            value={price}\n                            disabled={true}\n                            label='Original price'\n                            type='price'\n                          />\n                          <TextField\n                            prefix='$'\n                            value={discount}\n                            onChange={this.handleChange('discount')}\n                            label='Discounted price'\n                            type='discount'\n                          />\n                        </FormLayout.Group>\n                        <p>This sale price will expire in two weeks</p>\n                      </FormLayout>\n                    </Card>\n                    <PageActions\n                      primaryAction={[\n                        {\n                          content: 'Save',\n                          onAction: () => {\n                            const productVariableInput = {\n                              id: variantId,\n                              price: discount\n                            };\n                            handleSubmit({\n                              variables: { input: productVariableInput }\n                            });\n                          }\n                        }\n                      ]}\n                      secondaryActions={[\n                        {\n                          content: 'Remove discount'\n                        }\n                      ]}\n                    />\n                  </Form>\n                </Layout.Section>\n              </Layout>\n            </Page>\n          );\n        }}\n      </Mutation>\n    );\n  }\n\n  handleChange = field => {\n    return value => this.setState({ [field]: value });\n  };\n\n  itemToBeConsumed = () => {\n    const item = store.get('item');\n    const price = item.variants.edges[0].node.price;\n    const variantId = item.variants.edges[0].node.id;\n    const discounter = price * 0.1;\n    this.setState({ price, variantId });\n    return (price - discounter).toFixed(2);\n  };\n}\n\nexport default EditProduct;\n\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}