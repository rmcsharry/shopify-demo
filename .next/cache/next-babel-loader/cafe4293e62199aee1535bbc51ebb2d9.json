{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField } from '@shopify/polaris';\nimport store from 'store-js';\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: '',\n      price: '',\n      variantId: ''\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"itemToBeConsumed\", () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({\n        price,\n        variantId\n      });\n      return (price - discounter).toFixed(2);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      discount: this.itemToBeConsumed()\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      discount,\n      variantId\n    } = this.state;\n    return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"large\"\n    }, name), __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"$\",\n      value: price,\n      disabled: true,\n      label: \"Original price\",\n      type: \"price\"\n    }), __jsx(TextField, {\n      prefix: \"$\",\n      value: discount,\n      onChange: this.handleChange('discount'),\n      label: \"Discounted price\",\n      type: \"discount\"\n    })), __jsx(\"p\", null, \"This sale price will expire in two weeks\"))), __jsx(PageActions, {\n      primaryAction: [{\n        content: 'Save',\n        onAction: () => {\n          console.log('submitted');\n        }\n      }],\n      secondaryActions: [{\n        content: 'Remove discount'\n      }]\n    })))));\n  }\n\n}\n\nexport default EditProduct;","map":{"version":3,"sources":["/Users/richardmcsharry/code/shopify-demo/pages/edit-product.js"],"names":["Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","store","EditProduct","React","Component","discount","price","variantId","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","componentDidMount","itemToBeConsumed","render","name","state","handleChange","content","onAction","console","log"],"mappings":";;;;;AACA,SACEA,IADF,EAEEC,WAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,IANF,EAOEC,WAPF,EAQEC,SARF,QASO,kBATP;AAUA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAA0C;AAAA;AAAA;;AAAA,mCAChC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,SAAS,EAAE;AAHL,KADgC;;AAAA,0CAiExBC,KAAD,IAAW;AACxB,aAAQC,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAE,SAACF,KAAD,GAASC;AAAX,OAAd,CAAlB;AACD,KAnEuC;;AAAA,8CAqErB,MAAM;AACvB,YAAME,IAAI,GAAGV,KAAK,CAACW,GAAN,CAAU,MAAV,CAAb;AACA,YAAMN,KAAK,GAAGK,IAAI,CAACE,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BT,KAA1C;AACA,YAAMC,SAAS,GAAGI,IAAI,CAACE,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BC,EAA9C;AACA,YAAMC,UAAU,GAAGX,KAAK,GAAG,GAA3B;AACA,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAd;AACA,aAAO,CAACD,KAAK,GAAGW,UAAT,EAAqBC,OAArB,CAA6B,CAA7B,CAAP;AACD,KA5EuC;AAAA;;AAOxCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,QAAL,CAAc;AAAEL,MAAAA,QAAQ,EAAE,KAAKe,gBAAL;AAAZ,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQhB,MAAAA,KAAR;AAAeD,MAAAA,QAAf;AAAyBE,MAAAA;AAAzB,QAAuC,KAAKgB,KAAlD;AAEA,WACE,MAAC,IAAD,QACE,MAAC,MAAD,QACE,MAAC,MAAD,CAAQ,OAAR,QACE,MAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB,OAA2BD,IAA3B,CADF,EAEE,MAAC,IAAD,QACE,MAAC,IAAD;AAAM,MAAA,SAAS;AAAf,OACE,MAAC,UAAD,QACE,MAAC,UAAD,CAAY,KAAZ,QACE,MAAC,SAAD;AACE,MAAA,MAAM,EAAC,GADT;AAEE,MAAA,KAAK,EAAEhB,KAFT;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,KAAK,EAAC,gBAJR;AAKE,MAAA,IAAI,EAAC;AALP,MADF,EAQE,MAAC,SAAD;AACE,MAAA,MAAM,EAAC,GADT;AAEE,MAAA,KAAK,EAAED,QAFT;AAGE,MAAA,QAAQ,EAAE,KAAKmB,YAAL,CAAkB,UAAlB,CAHZ;AAIE,MAAA,KAAK,EAAC,kBAJR;AAKE,MAAA,IAAI,EAAC;AALP,MARF,CADF,EAiBE,4DAjBF,CADF,CADF,EAwBE,MAAC,WAAD;AACE,MAAA,aAAa,EAAE,CACb;AACEC,QAAAA,OAAO,EAAE,MADX;AAEEC,QAAAA,QAAQ,EAAE,MAAM;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AAJH,OADa,CADjB;AASE,MAAA,gBAAgB,EAAE,CAChB;AACEH,QAAAA,OAAO,EAAE;AADX,OADgB;AATpB,MAxBF,CAFF,CADF,CADF,CADF;AAiDD;;AA/DuC;;AA+E1C,eAAevB,WAAf","sourcesContent":["\nimport {\n  Card,\n  DisplayText,\n  Form,\n  FormLayout,\n  Layout,\n  Page,\n  PageActions,\n  TextField\n} from '@shopify/polaris';\nimport store from 'store-js';\n\nclass EditProduct extends React.Component {\n  state = {\n    discount: '',\n    price: '',\n    variantId: ''\n  };\n\n  componentDidMount() {\n    this.setState({ discount: this.itemToBeConsumed() });\n  }\n\n  render() {\n    const { name, price, discount, variantId } = this.state;\n\n    return (\n      <Page>\n        <Layout>\n          <Layout.Section>\n            <DisplayText size=\"large\">{name}</DisplayText>\n            <Form>\n              <Card sectioned>\n                <FormLayout>\n                  <FormLayout.Group>\n                    <TextField\n                      prefix=\"$\"\n                      value={price}\n                      disabled={true}\n                      label=\"Original price\"\n                      type=\"price\"\n                    />\n                    <TextField\n                      prefix=\"$\"\n                      value={discount}\n                      onChange={this.handleChange('discount')}\n                      label=\"Discounted price\"\n                      type=\"discount\"\n                    />\n                  </FormLayout.Group>\n                  <p>\n                    This sale price will expire in two weeks\n                  </p>\n                </FormLayout>\n              </Card>\n              <PageActions\n                primaryAction={[\n                  {\n                    content: 'Save',\n                    onAction: () => {\n                      console.log('submitted');\n                    }\n                  }\n                ]}\n                secondaryActions={[\n                  {\n                    content: 'Remove discount'\n                  }\n                ]}\n              />\n            </Form>\n          </Layout.Section>\n        </Layout>\n      </Page>\n    );\n  }\n\n  handleChange = (field) => {\n    return (value) => this.setState({ [field]: value });\n  };\n\n  itemToBeConsumed = () => {\n    const item = store.get('item');\n    const price = item.variants.edges[0].node.price;\n    const variantId = item.variants.edges[0].node.id;\n    const discounter = price * 0.1;\n    this.setState({ price, variantId });\n    return (price - discounter).toFixed(2);\n  };\n}\n\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}